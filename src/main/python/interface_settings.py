# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QIcon

from settings import Settings, ICON_DIR


class Ui_Dialog(object):
    project_config = Settings()

    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(500, 660)
        Dialog.setMinimumSize(QtCore.QSize(500, 0))
        Dialog.setMaximumSize(QtCore.QSize(500, 16777215))
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName("verticalLayout")

        self.background_layout = QtWidgets.QHBoxLayout()
        self.background_layout.setObjectName('background')

        self.background_label = QtWidgets.QLabel(Dialog)
        self.background_label.setMinimumSize(QtCore.QSize(30, 10))
        self.background_label.setMaximumSize(QtCore.QSize(30, 10))
        self.background_label.setObjectName('background_label')
        self.background_layout.addWidget(self.background_label)

        self.background_color = QtWidgets.QTextEdit(Dialog)
        self.background_color.setReadOnly(True)
        self.background_color.setMinimumSize(QtCore.QSize(100, 26))
        self.background_color.setMaximumSize(QtCore.QSize(100, 26))
        self.background_color.setObjectName('background_color')
        self.background_layout.addWidget(self.background_color)

        self.background_pick = QtWidgets.QPushButton(Dialog)
        self.background_pick.setMinimumSize(QtCore.QSize(32, 32))
        self.background_pick.setMaximumSize(QtCore.QSize(32, 32))
        self.background_pick.setObjectName('background_pick')
        self.background_layout.addWidget(self.background_pick)

        self.verticalLayout.addLayout(self.background_layout)

        for k, v in self.project_config.types_match.items():
            layout = QtWidgets.QHBoxLayout()
            layout_name = f'horizontalLayout_{k}'
            layout.setObjectName(layout_name)

            label = QtWidgets.QLabel(Dialog)
            label_name = f'label_{k}'
            label.setMinimumSize(QtCore.QSize(10, 10))
            label.setMaximumSize(QtCore.QSize(10, 10))
            label.setObjectName(label_name)
            layout.addWidget(label)
            self.__setattr__(label_name, label)

            color = QtWidgets.QTextEdit(Dialog)
            color.setReadOnly(True)
            color_name = f'type{k}_color'
            color.setMinimumSize(QtCore.QSize(100, 26))
            color.setMaximumSize(QtCore.QSize(100, 26))
            color.setObjectName(color_name)
            layout.addWidget(color)
            self.__setattr__(color_name, color)

            pick = QtWidgets.QPushButton(Dialog)
            pick_name = f'type{k}_pick'
            pick.setMinimumSize(QtCore.QSize(32, 32))
            pick.setMaximumSize(QtCore.QSize(32, 32))
            pick.setObjectName(pick_name)
            layout.addWidget(pick)
            self.__setattr__(pick_name, pick)

            marker = QtWidgets.QComboBox(Dialog)
            marker_name = f'type{k}_marker'
            marker.setMinimumSize(QtCore.QSize(100, 0))
            marker.setMaximumSize(QtCore.QSize(100, 16777215))
            marker.setObjectName(marker_name)
            _markers = self.project_config.markers
            # marker = self.__getattribute__(f'type{k}_marker')
            for idx, key in enumerate(_markers):
                marker.addItem(QIcon(str(_markers[key])), _markers[key].stem)
            layout.addWidget(marker)
            self.__setattr__(marker_name, marker)

            name = QtWidgets.QTextEdit(Dialog)
            name_name = f'type{k}_name'
            name.setMinimumSize(QtCore.QSize(100, 26))
            name.setMaximumSize(QtCore.QSize(100, 26))
            name.setObjectName(name_name)
            layout.addWidget(name)
            self.__setattr__(name_name, name)

            self.__setattr__(layout_name, layout)
            self.verticalLayout.addLayout(layout)

        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Save)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)

        self.retranslateUi(Dialog)
        self.buttonBox.accepted.connect(Dialog.accept)
        self.buttonBox.rejected.connect(Dialog.reject)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Настройки"))

        self.background_label.setText(_translate("Dialog", 'Фон'))
        self.background_pick.setIcon(QIcon(str(ICON_DIR / 'pick.svg')))

        for k, v in self.project_config.types_match.items():
            label = self.__getattribute__(f'label_{k}')
            label.setText(_translate("Dialog", str(k)))

            pick = self.__getattribute__(f'type{k}_pick')
            pick.setIcon(QIcon(str(ICON_DIR / 'pick.svg')))

